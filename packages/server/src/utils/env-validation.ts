// Generated by An Kun

interface EnvironmentConfig {
  database_url: string
  stack_project_id: string
  stack_secret_key: string
  node_env: string
  port: number
}

export function validateEnvironment(): EnvironmentConfig {
  const required_env_vars = {
    database_url: process.env.DATABASE_URL || process.env.POSTGRES_URL,
    stack_project_id: process.env.NEXT_PUBLIC_STACK_PROJECT_ID,
    stack_secret_key: process.env.STACK_SECRET_SERVER_KEY,
    node_env: process.env.NODE_ENV || 'development',
    port: parseInt(process.env.PORT || '3001')
  }

  const missing_vars: string[] = []

  // Check required variables
  if (!required_env_vars.database_url) {
    missing_vars.push('DATABASE_URL or POSTGRES_URL')
  }
  if (!required_env_vars.stack_project_id) {
    missing_vars.push('NEXT_PUBLIC_STACK_PROJECT_ID')
  }
  if (!required_env_vars.stack_secret_key) {
    missing_vars.push('STACK_SECRET_SERVER_KEY')
  }

  if (missing_vars.length > 0) {
    console.error('‚ùå Missing required environment variables:')
    missing_vars.forEach(var_name => console.error(`  - ${var_name}`))
    console.error('\nüí° Run: pnpm run setup:env to configure environment variables')
    throw new Error('Missing required environment variables')
  }

  console.log('‚úÖ Environment validation passed')
  return required_env_vars as EnvironmentConfig
}

export function logEnvironmentStatus() {
  console.log('üîç Environment Status:')
  console.log(`  NODE_ENV: ${process.env.NODE_ENV}`)
  console.log(`  DATABASE_URL: ${process.env.DATABASE_URL ? '‚úÖ Set' : '‚ùå Missing'}`)
  console.log(`  STACK_PROJECT_ID: ${process.env.NEXT_PUBLIC_STACK_PROJECT_ID ? '‚úÖ Set' : '‚ùå Missing'}`)
  console.log(`  STACK_SECRET_KEY: ${process.env.STACK_SECRET_SERVER_KEY ? '‚úÖ Set' : '‚ùå Missing'}`)
}
