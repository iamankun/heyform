// Generated by An Kun

interface SecureEnvironmentConfig {
  server_vars: {
    database_url: string
    database_url_unpooled: string
    stack_secret_key: string
    jwt_secret: string
    pg_password: string
  }
  client_vars: {
    stack_project_id: string
    stack_publishable_key: string
    api_base_url: string
    node_env: string
  }
}

export function getSecureEnvironmentConfig(): SecureEnvironmentConfig {
  // Server-only variables (never exposed to browser)
  const server_vars = {
    database_url: process.env.DATABASE_URL || '',
    database_url_unpooled: process.env.DATABASE_URL_UNPOOLED || '',
    stack_secret_key: process.env.STACK_SECRET_SERVER_KEY || '',
    jwt_secret: process.env.JWT_SECRET || '',
    pg_password: process.env.PGPASSWORD || ''
  }

  // Client-safe variables (can be exposed to browser)
  const client_vars = {
    stack_project_id: process.env.NEXT_PUBLIC_STACK_PROJECT_ID || '',
    stack_publishable_key: process.env.NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY || '',
    api_base_url: process.env.VITE_API_BASE_URL || 'http://localhost:3001',
    node_env: process.env.NODE_ENV || 'development'
  }

  return { server_vars, client_vars }
}

export function validateSecureEnvironment(): boolean {
  const config = getSecureEnvironmentConfig()
  const missing_server_vars: string[] = []
  const missing_client_vars: string[] = []

  // Validate server variables
  if (!config.server_vars.database_url) missing_server_vars.push('DATABASE_URL')
  if (!config.server_vars.stack_secret_key) missing_server_vars.push('STACK_SECRET_SERVER_KEY')
  if (!config.server_vars.jwt_secret) missing_server_vars.push('JWT_SECRET')

  // Validate client variables
  if (!config.client_vars.stack_project_id) missing_client_vars.push('NEXT_PUBLIC_STACK_PROJECT_ID')
  if (!config.client_vars.stack_publishable_key) missing_client_vars.push('NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY')

  if (missing_server_vars.length > 0) {
    console.error('❌ Missing server environment variables:', missing_server_vars)
    return false
  }

  if (missing_client_vars.length > 0) {
    console.error('❌ Missing client environment variables:', missing_client_vars)
    return false
  }

  console.log('🔒 Environment security validation passed')
  return true
}

export function logSecurityStatus() {
  const config = getSecureEnvironmentConfig()
  
  console.log('🔐 Security Status:')
  console.log('  Server Variables (Protected):')
  console.log(`    DATABASE_URL: ${config.server_vars.database_url ? '✅ Set' : '❌ Missing'}`)
  console.log(`    STACK_SECRET_KEY: ${config.server_vars.stack_secret_key ? '✅ Set' : '❌ Missing'}`)
  console.log(`    JWT_SECRET: ${config.server_vars.jwt_secret ? '✅ Set' : '❌ Missing'}`)
  
  console.log('  Client Variables (Public):')
  console.log(`    STACK_PROJECT_ID: ${config.client_vars.stack_project_id ? '✅ Set' : '❌ Missing'}`)
  console.log(`    STACK_PUBLISHABLE_KEY: ${config.client_vars.stack_publishable_key ? '✅ Set' : '❌ Missing'}`)
}
