// Generated by An Kun
"use server";

import { neon } from "@neondatabase/serverless";
import { stack_server_app } from "../../webapp/src/lib/stack-server";
import { revalidatePath } from "next/cache";

const sql = neon(process.env.DATABASE_URL!);

export async function toggleTodoCompletion(todo_id: string) {
  const user = await stack_server_app.getUser();
  
  if (!user) {
    throw new Error("User not authenticated");
  }

  await sql`
    UPDATE todos 
    SET 
      is_complete = NOT is_complete,
      updated_at = NOW()
    WHERE id = ${todo_id} AND owner_id = ${user.id}
  `;

  revalidatePath("/todos");
}

export async function deleteTodo(todo_id: string) {
  const user = await stack_server_app.getUser();
  
  if (!user) {
    throw new Error("User not authenticated");
  }

  await sql`
    DELETE FROM todos 
    WHERE id = ${todo_id} AND owner_id = ${user.id}
  `;

  revalidatePath("/todos");
}

export async function getUserTodos() {
  const user = await stack_server_app.getUser();
  
  if (!user) {
    return [];
  }

  const todos = await sql`
    SELECT 
      todos.id,
      todos.task,
      todos.is_complete,
      todos.inserted_at,
      users.id as "owner.id",
      users.email as "owner.email"
    FROM todos
    LEFT JOIN neon_auth.users_sync users ON todos.owner_id = users.id
    WHERE todos.owner_id = ${user.id}
    ORDER BY todos.inserted_at ASC
  `;

  return todos;
}
