// Generated by An Kun

import { StackServerApp } from "@stackframe/stack";

if (!process.env.STACK_SECRET_SERVER_KEY) {
  throw new Error('STACK_SECRET_SERVER_KEY environment variable is required');
}

if (!process.env.NEXT_PUBLIC_STACK_PROJECT_ID) {
  throw new Error('NEXT_PUBLIC_STACK_PROJECT_ID environment variable is required');
}

export const stack_server_app = new StackServerApp({
  tokenStore: "nextjs-cookie",
  secretServerKey: process.env.STACK_SECRET_SERVER_KEY,
  projectId: process.env.NEXT_PUBLIC_STACK_PROJECT_ID,
  publishableClientKey: process.env.NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY!
});

export async function validateStackToken(token: string) {
  try {
    const user = await stack_server_app.getUser({ accessToken: token });
    return {
      success: true,
      user: {
        id: user.id,
        email: user.primaryEmail,
        display_name: user.displayName,
        profile_image_url: user.profileImageUrl,
        is_email_verified: user.primaryEmailVerified
      }
    };
  } catch (error) {
    console.error('Stack auth validation failed:', error);
    return {
      success: false,
      user: null,
      error: error.message
    };
  }
}

export async function getStackUser(user_id: string) {
  try {
    const user = await stack_server_app.getUser({ userId: user_id });
    return {
      success: true,
      user: {
        id: user.id,
        email: user.primaryEmail,
        display_name: user.displayName,
        profile_image_url: user.profileImageUrl,
        is_email_verified: user.primaryEmailVerified,
        created_at: user.createdAt,
        updated_at: user.updatedAt
      }
    };
  } catch (error) {
    console.error('Failed to get Stack user:', error);
    return {
      success: false,
      user: null,
      error: error.message
    };
  }
}
