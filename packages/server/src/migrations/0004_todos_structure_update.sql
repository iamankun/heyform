-- Generated by An Kun

-- Create todos table with the structure from the example
CREATE TABLE IF NOT EXISTS todos (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    task TEXT NOT NULL,
    is_complete BOOLEAN DEFAULT FALSE,
    owner_id VARCHAR(255) NOT NULL,
    inserted_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Create users_sync table for Stack Auth integration
CREATE TABLE IF NOT EXISTS neon_auth.users_sync (
    id VARCHAR(255) PRIMARY KEY,
    email VARCHAR(255) NOT NULL UNIQUE,
    display_name VARCHAR(255),
    profile_image_url TEXT,
    is_email_verified BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT NOW()
);

-- Create indexes
CREATE INDEX IF NOT EXISTS idx_todos_owner_id ON todos(owner_id);
CREATE INDEX IF NOT EXISTS idx_todos_inserted_at ON todos(inserted_at);
CREATE INDEX IF NOT EXISTS idx_users_sync_email ON neon_auth.users_sync(email);

-- Add foreign key relationship
ALTER TABLE todos 
ADD CONSTRAINT fk_todos_owner 
FOREIGN KEY (owner_id) REFERENCES neon_auth.users_sync(id) 
ON DELETE CASCADE;
