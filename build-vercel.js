// Generated by An Kun

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('🚀 Starting Vercel build process...');

try {
  // Set environment variables for build
  process.env.NODE_OPTIONS = '--max_old_space_size=4096';
  process.env.CI = 'true';

  // Remove existing lockfile to avoid mismatch
  console.log('🗑️ Removing existing lockfile...');
  if (fs.existsSync('pnpm-lock.yaml')) {
    fs.unlinkSync('pnpm-lock.yaml');
  }

  // Install dependencies with no frozen lockfile
  console.log('📦 Installing dependencies...');
  execSync('pnpm install --no-frozen-lockfile --ignore-engines', { 
    stdio: 'inherit',
    env: { 
      ...process.env,
      NODE_OPTIONS: '--max_old_space_size=4096'
    }
  });

  // Build dependencies first
  console.log('🔧 Building dependencies...');
  execSync('pnpm run build:deps', { stdio: 'inherit' });

  // Build webapp with Vite
  console.log('🏗️ Building webapp...');
  execSync('cd packages/webapp && pnpm run build', { stdio: 'inherit' });

  // Copy dist to root for Vercel
  const source_dir = 'packages/webapp/dist';
  const target_dir = 'dist';
  
  if (fs.existsSync(target_dir)) {
    fs.rmSync(target_dir, { recursive: true });
  }
  
  if (fs.existsSync(source_dir)) {
    fs.cpSync(source_dir, target_dir, { recursive: true });
  } else {
    throw new Error('Build output directory not found');
  }
  
  console.log('✅ Build completed successfully!');
} catch (error) {
  console.error('❌ Build failed:', error.message);
  console.error('Stack trace:', error.stack);
  process.exit(1);
}
