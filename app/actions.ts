// Generated by An Kun
"use server";
import { neon } from "@neondatabase/serverless";

// Security check - ensure we're in server environment
if (typeof window !== 'undefined') {
  throw new Error('Server actions can only be used on the server side');
}

// Validate DATABASE_URL exists
if (!process.env.DATABASE_URL) {
  throw new Error('DATABASE_URL environment variable is required');
}

const sql = neon(process.env.DATABASE_URL);

export async function getData() {
  try {
    const data = await sql`
      SELECT 
        current_database() as database_name,
        current_user as current_user,
        current_timestamp as timestamp
    `;
    return {
      success: true,
      data: data[0],
      timestamp: new Date().toISOString()
    };
  } catch (error) {
    console.error('Database connection failed:', error);
    return {
      success: false,
      error: 'Failed to connect to database',
      timestamp: new Date().toISOString()
    };
  }
}

export async function testDatabaseConnection() {
  try {
    const result = await sql`SELECT 1 as test`;
    return {
      success: true,
      message: 'Database connection successful',
      connected: result.length > 0
    };
  } catch (error) {
    console.error('Database test failed:', error);
    return {
      success: false,
      message: 'Database connection failed',
      connected: false
    };
  }
}

export async function getFormsList(limit: number = 10) {
  try {
    const data = await sql`
      SELECT 
        id,
        title,
        description,
        status,
        created_at
      FROM forms
      WHERE deleted_at IS NULL
      ORDER BY created_at DESC
      LIMIT ${limit}
    `;
    return {
      success: true,
      forms: data
    };
  } catch (error) {
    console.error('Failed to get forms:', error);
    return {
      success: false,
      forms: [],
      error: 'Failed to fetch forms'
    };
  }
}
