// Generated by An Kun

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

async function fixInstallation() {
  console.log('üîß Fixing installation issues...');
  
  try {
    // Clean existing installations
    console.log('üßπ Cleaning existing installations...');
    
    // Remove node_modules and lock files
    const dirsToClean = [
      'node_modules',
      'packages/webapp/node_modules',
      'packages/server/node_modules',
      'packages/utils/node_modules',
      'packages/shared-types-enums/node_modules',
      'packages/answer-utils/node_modules'
    ];
    
    const filesToClean = [
      'pnpm-lock.yaml',
      'package-lock.json',
      'yarn.lock'
    ];
    
    dirsToClean.forEach(dir => {
      if (fs.existsSync(dir)) {
        console.log(`  Removing ${dir}...`);
        fs.rmSync(dir, { recursive: true, force: true });
      }
    });
    
    filesToClean.forEach(file => {
      if (fs.existsSync(file) && file !== 'pnpm-lock.yaml') {
        console.log(`  Removing ${file}...`);
        fs.unlinkSync(file);
      }
    });
    
    // Clear pnpm cache
    console.log('üóëÔ∏è Clearing pnpm cache...');
    try {
      execSync('pnpm store prune', { stdio: 'inherit' });
    } catch (error) {
      console.log('Cache clear failed, continuing...');
    }
    
    // Install with specific flags
    console.log('üì¶ Installing dependencies...');
    execSync('pnpm install --frozen-lockfile=false --prefer-frozen-lockfile=false', { 
      stdio: 'inherit',
      env: { 
        ...process.env,
        NODE_OPTIONS: '--max_old_space_size=4096'
      }
    });
    
    console.log('‚úÖ Installation completed successfully!');
    
  } catch (error) {
    console.error('‚ùå Installation failed:', error.message);
    console.log('\nüí° Try these manual steps:');
    console.log('1. rm -rf node_modules packages/*/node_modules');
    console.log('2. rm -f pnpm-lock.yaml package-lock.json yarn.lock');
    console.log('3. pnpm store prune');
    console.log('4. pnpm install --no-frozen-lockfile');
    
    process.exit(1);
  }
}

fixInstallation();
