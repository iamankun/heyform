// Generated by An Kun

const fs = require('fs');
const path = require('path');

function cleanPackageJSON(file_path) {
  try {
    console.log(`üßπ Cleaning ${file_path}...`);
    
    const content = fs.readFileSync(file_path, 'utf8');
    
    // Remove any non-JSON content that might have been accidentally added
    const lines = content.split('\n');
    const cleaned_lines = [];
    let in_json = false;
    let brace_count = 0;
    
    for (const line of lines) {
      const trimmed = line.trim();
      
      if (trimmed.startsWith('{')) {
        in_json = true;
        brace_count++;
        cleaned_lines.push(line);
      } else if (in_json) {
        cleaned_lines.push(line);
        
        for (const char of trimmed) {
          if (char === '{') brace_count++;
          if (char === '}') brace_count--;
        }
        
        if (brace_count === 0) {
          break;
        }
      }
    }
    
    const cleaned_content = cleaned_lines.join('\n');
    
    // Validate the cleaned JSON
    const parsed = JSON.parse(cleaned_content);
    
    // Write back with proper formatting
    fs.writeFileSync(file_path, JSON.stringify(parsed, null, 2));
    
    console.log(`‚úÖ ${file_path} cleaned successfully`);
    return true;
  } catch (error) {
    console.error(`‚ùå Failed to clean ${file_path}:`, error.message);
    return false;
  }
}

function cleanAllPackageJSON() {
  console.log('üöÄ Starting package.json cleanup...');
  
  const files_to_clean = [
    'package.json',
    'packages/webapp/package.json',
    'packages/server/package.json',
    'packages/utils/package.json',
    'packages/shared-types-enums/package.json',
    'packages/answer-utils/package.json'
  ];
  
  let all_cleaned = true;
  
  files_to_clean.forEach(file => {
    if (fs.existsSync(file)) {
      const cleaned = cleanPackageJSON(file);
      if (!cleaned) {
        all_cleaned = false;
      }
    }
  });
  
  if (all_cleaned) {
    console.log('‚úÖ All package.json files cleaned successfully!');
  } else {
    console.error('‚ùå Some files could not be cleaned');
    process.exit(1);
  }
}

cleanAllPackageJSON();
